<?xml version="1.0" encoding="UTF-8" ?>
<views:BaseContentPage x:Class="InterTwitter.Views.SignUpPasswordPage"
                       xmlns="http://xamarin.com/schemas/2014/forms"
                       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                       xmlns:controls="clr-namespace:InterTwitter.Controls"
                       xmlns:resources="clr-namespace:InterTwitter.Resources"
                       xmlns:behaviors="clr-namespace:InterTwitter.Behaviors"
                       xmlns:validators="clr-namespace:InterTwitter.Validators"
                       xmlns:views="clr-namespace:InterTwitter.Views"
                       xmlns:android="clr-namespace:Xamarin.Forms.PlatformConfiguration.AndroidSpecific;assembly=Xamarin.Forms.Core"
                       android:Application.WindowSoftInputModeAdjust="Resize"
                       xmlns:ios="clr-namespace:Xamarin.Forms.PlatformConfiguration.iOSSpecific;assembly=Xamarin.Forms.Core"
                       ios:Page.UseSafeArea="False"
                       BackgroundColor="{StaticResource bg_1}">

    <views:BaseContentPage.Padding>
        <OnPlatform x:TypeArguments="Thickness">
            <On Platform="iOS"
                Value="0,45,0,0"/>
            <On Platform="Android"
                Value="0,20,0,0"/>
        </OnPlatform>
    </views:BaseContentPage.Padding>

    <Grid HorizontalOptions="Fill"
          RowSpacing="0"
          VerticalOptions="Fill">

        <Grid.RowDefinitions>

            <RowDefinition Height="100" />
            <RowDefinition Height="150" />
            <RowDefinition Height="*" />

        </Grid.RowDefinitions>

        <!--NAVIGATION BAR-->
        <StackLayout Grid.Row="0"
                     HorizontalOptions="Fill"
                     VerticalOptions="Fill">

            <controls:AuthorizationNavigationBar HorizontalOptions="Fill" 
                                                 VerticalOptions="Start"
                                                 IsBackButtonVisible="True"
                                                 GoBackCommand="{Binding GoBackCommand}"/>

            <Label Style="{StaticResource AccountLabelStyle}" 
                   Text="{x:Static resources:AppResource.NeedPasswordLabel}" />

        </StackLayout>

        <!--ENTRY BLOCK-->
        <StackLayout Grid.Row="1">

            <!--PASSWORD ENTRY-->
            <controls:CustomEntry x:Name="passwordEntry"         
                                  Text="{Binding Password}"
                                  NameText="{x:Static resources:AppResource.PasswordText}"
                                  Placeholder="{x:Static resources:AppResource.PasswordText}" 
                                  Style="{StaticResource CustomEntryStyle}"
                                  ReturnType="Next"
                                  IsPassword="True"
                                  IsClearButtonVisible="True">

                <controls:CustomEntry.Behaviors>

                    <behaviors:ValidationBehavior ErrorMessage="{x:Static resources:AppResource.PasswordErrorMessage}"
                                                  Regex="{x:Static validators:Validator.RegexPassword}"/>

                </controls:CustomEntry.Behaviors>

            </controls:CustomEntry>

            <!--CONFIRM PASSWORD ENTRY-->
            <controls:CustomEntry x:Name="confirmPasswordEntry"
                                  NameText="{x:Static resources:AppResource.ConfirmPasswordText}"
                                  Placeholder="{x:Static resources:AppResource.ConfirmPasswordText}"
                                  Text="{Binding ConfirmPassword}"
                                  Style="{StaticResource CustomEntryStyle}"
                                  ReturnType="Done"
                                  IsPassword="True"
                                  IsClearButtonVisible="True">

                <controls:CustomEntry.Behaviors>

                    <behaviors:ValidationBehavior ErrorMessage="{x:Static resources:AppResource.ConfirmPasswordErrorMessage}"
                                                  ComparableString="{Binding Text, Source={x:Reference passwordEntry}}"/>

                </controls:CustomEntry.Behaviors>

            </controls:CustomEntry>

        </StackLayout>

        <!--SIGN BUTTONS BLOCK-->
        <StackLayout x:Name="signButtonsBlock" 
                     Grid.Row="2"
                     IsVisible="{Binding IsSignButtonsBlockVisible}"
                     Margin="0,40,0,0">

            <!--CONFIRM BUTTON-->
            <Button Style="{StaticResource LoginButtonStyle}"
                    Text="{x:Static resources:AppResource.ConfirmButton}"
                    Command="{Binding ConfirmPasswordCommand}"/>

            <!--LOG IN BUTTON-->
            <controls:ClickableContentView Command="{Binding LogInCommand}"
                                           Style="{StaticResource ClickableContentViewStyle}">

                <Label Style="{StaticResource UnderButtonLabelStyle}"
                       Text="{x:Static resources:AppResource.LogInButton}"/>

            </controls:ClickableContentView>

        </StackLayout>

        <!--KEYBOARD BUTTONS BLOCK-->
        <Grid x:Name="keyboardButton"
              Grid.Row="2"
              TranslationY="{Binding KeyboardButtonTranslationY}"
              IsVisible="{Binding IsKeyboardButtonVisible}"
              VerticalOptions="EndAndExpand">

            <!--KEYBOARD SIGN UP BUTTON-->
            <Button Style="{StaticResource KeyboardButton}"
                    Text="{x:Static resources:AppResource.ConfirmButton}" 
                    Command="{Binding ConfirmPasswordCommand}">

                <Button.Triggers>

                    <DataTrigger TargetType="Button"
                                 Binding="{Binding Source={x:Reference passwordEntry}, Path=IsEntryFocused}"
                                 Value="True">

                        <Setter Property="IsVisible"
                                Value="False"/>

                    </DataTrigger>

                </Button.Triggers>

            </Button>

            <!--KEYBOARD NEXT BUTTON-->
            <Button Style="{StaticResource KeyboardButton}"
                    Text="{x:Static resources:AppResource.NextButton}" 
                    Clicked="NextButtonClicked">

                <Button.Triggers>

                    <DataTrigger TargetType="Button"
                                 Binding="{Binding Source={x:Reference confirmPasswordEntry}, Path=IsEntryFocused}"
                                 Value="True">

                        <Setter Property="IsVisible"
                                Value="False"/>

                    </DataTrigger>

                </Button.Triggers>

            </Button>

        </Grid>

    </Grid>

</views:BaseContentPage>

